
name: Release NPM Package

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type (minor, major, patch):"
        required: true
        default: patch
  release:
    types:
      - created

jobs:
  build_ubuntu:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
      - name: Build
        run: cd distill && cargo build --release
      - name: Rename Binary
        run: mv distill/target/release/distill distill-for-ubuntu
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: distill-for-ubuntu
          path: dist/

  build_macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
      - name: Build
        run: cd distill && cargo build --release
      - name: Rename Binary
        run: mv distill/target/release/distill distill-for-osx
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: distill-for-osx
          path: dist/

  build_windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
      - name: Build
        run: cd distill && cargo build --release
      - name: Rename Binary
        run: mv distill/target/release/distill.exe distill-for-windows.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: distill-for-windows.exe
          path: dist/

  build_bundle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm ci
        # run: yarn install --frozen-lockfile

      - name: Run Unit Tests
        working-directory: ./services/graphql
        run: npm run test

      - name: Run package
        working-directory: ./services/graphql
        run: npm run build

  publish_npm_package:
    name: Create Release
    needs: [build_ubuntu, build_macos, build_windows, build_bundle]
    runs-on: ubuntu-latest
    outputs:
      NEW_TAG: ${{ steps.version.outputs.NEW_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
#           ref: ${{ env.GIT_REF }}
#           token: ${{ secrets.GITHUB_TOKEN }}

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/download-artifact@v2
        with:
          path: temp_dist

      - name: Flatten Binary Directory
        run: |
          mkdir dist
          mv temp_dist/**/* dist || true
          rmdir dist/**/* || true
          rm -rf temp_dist

      - name: Grant Permissions
        run: chmod +x dist/*

      - name: Setup Package Registry Credentials
        run: echo "not necessary yet!"

      - name: Preview Publish
        run: npm pack

      - name: Automated Version Bump
        uses: phips28/gh-action-bump-version@master
        id: version_bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target-branch: ${{ env.GIT_REF }}
          default: ${{ github.event.inputs.release_type }}
          minor-wording: 'feature,MAGWEB'
          major-wording: 'BREAKING'
          patch-wording: 'hotfix,HOTFIX'
          commit-message: 'CI: version bump to {{version}} [skip ci]'
          tag-prefix: 'v'

      - name: Create Changelog
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: gandarez/changelog-action@v1.2.0
        with:
          exclude: |
            ^CI: version bump to.*

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version_bump.outputs.newTag }}
          name: ${{ steps.version_bump.outputs.newTag }}
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
